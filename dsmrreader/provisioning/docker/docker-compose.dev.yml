######################################################################
# Compose for DSMR-reader development only, NEVER use in production! #
######################################################################

version: "3.7"
services:
  # Manage command:   docker exec -it dsmr-app ./manage.py
  dsmr-app:
    container_name: dsmr-app
    build:
      context: .
      dockerfile: Dockerfile
    command: ./manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      # DSMR-reader development
      - dsmr-db
      - dsmr-docs
      # Testing DB engines
      - test-db-postgres
      - test-db-mysql
      # Misc tools for development/testing
      - mqtt-v2
      - influxdb-v2
    environment:
      # Development
      - DSMRREADER_LOGLEVEL=DEBUG
      - DJANGO_DATABASE_ENGINE=django.db.backends.postgresql
      - DJANGO_DATABASE_HOST=dsmr-db
      - DJANGO_DATABASE_PORT=5432
      - DJANGO_DATABASE_NAME=dsmrreader
      - DJANGO_DATABASE_USER=dsmrreader
      - DJANGO_DATABASE_PASSWORD=postgres-password
      - DJANGO_SECRET_KEY=development
      # Tests
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_HOST=test-db-postgres
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_PORT=5432
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_USER=testuser
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_PASSWORD=testpasswd
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_NAME=test_dsmrreader

      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_HOST=test-db-mysql
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_PORT=3306
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_USER=testuser
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_PASSWORD=testpasswd
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_NAME=dsmrreader  # Django prefixes "test_" automatically.

  # Docs commands:   docker exec -it dsmr-docs
  dsmr-docs:
    container_name: dsmr-docs
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/docs/
    command: sphinx-autobuild . _build/html --host 0.0.0.0 --port 10000
    volumes:
      - .:/app
    ports:
      - '10000:10000'
    environment:
      - SPHINXOPTS="-D language='nl'"

  dsmr-db:
    container_name: dsmr-db
    image: postgres:13
    restart: always
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsmrreader"]
      interval: 10s
      timeout: 5s
      retries: 10
#    volumes:
#      - .:/app
    environment:
      - POSTGRES_DB=dsmrreader
      - POSTGRES_USER=dsmrreader
      - POSTGRES_PASSWORD=postgres-password

  test-db-postgres:
    container_name: test-db-postgres
    image: postgres:13
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsmrreader"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_DB=test_dsmrreader
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpasswd

  # WARNING: MySQL tests/connections are broken here, but do seem to work well in the CI anyway.
  test-db-mysql:
    container_name: test-db-mysql
    image: mysql:5.7
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
     - MYSQL_DATABASE=test_dsmrreader
     - MYSQL_USER=testuser
     - MYSQL_PASSWORD=testpasswd
     - MYSQL_ROOT_PASSWORD=testpasswd

  mqtt-v2:
    container_name: mqtt-v2
    image: eclipse-mosquitto:2
    restart: always
    volumes:
      - ./dsmrreader/provisioning/docker/mosquitto-dev/:/mosquitto/config/
    ports:
      - '1883:1883'

  influxdb-v2:
    container_name: influxdb-v2
    image: influxdb:2.0-alpine
    restart: always
    ports:
      - '8086:8086'
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=dsmrreader
      - DOCKER_INFLUXDB_INIT_PASSWORD=dsmrreader
      - DOCKER_INFLUXDB_INIT_ORG=dsmrreader
      - DOCKER_INFLUXDB_INIT_BUCKET=dsmrreader_measurements
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=dsmrreader_influxdb_token
