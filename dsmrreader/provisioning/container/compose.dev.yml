######################################################################
# Compose for DSMR-reader development only, NEVER use in production! #
######################################################################

version: "3.9"
services:
  # http://localhost:8000
  dsmr-app:
    container_name: dsmr-app
    restart: unless-stopped
    build:
      context: .
      dockerfile: Containerfile
      target: local-dsmrreader-app
      args:
        - PYTHON_VERSION=3.11
    volumes:
      - .:/usr/src/app
    ports:
      - '8000:8000'
    depends_on:
      # DSMR-reader development
      - dsmr-db
      - dsmr-docs-en
      - dsmr-docs-nl
      # Testing DB engines
      - test-db-postgres
      - test-db-mysql
      # Misc tools for development/testing
      - mosquitto
      - influxdb
    environment:
      # Development
      - DSMRREADER_LOGLEVEL=DEBUG
      - DJANGO_DATABASE_ENGINE=django.db.backends.postgresql
      - DJANGO_DATABASE_HOST=dsmr-db
      - DJANGO_DATABASE_PORT=5432
      - DJANGO_DATABASE_NAME=dsmrreader
      - DJANGO_DATABASE_USER=dsmrreader
      - DJANGO_DATABASE_PASSWORD=postgres-password
      - DJANGO_SECRET_KEY=development
      # Tests
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_HOST=test-db-postgres
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_PORT=5432
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_USER=testuser
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_PASSWORD=testpasswd
      - DOCKER_TEST_POSTGRESQL_DJANGO_DATABASE_NAME=test_dsmrreader

      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_HOST=test-db-mysql
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_PORT=3306
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_USER=testuser
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_PASSWORD=testpasswd
      - DOCKER_TEST_MYSQL_DJANGO_DATABASE_NAME=dsmrreader  # Django prefixes "test_" automatically.

  # http://localhost:10000
  dsmr-docs-en:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Containerfile
      target: local-dsmrreader-docs-en
    volumes:
      - .:/usr/src/app
    ports:
      - '10000:10000'

  # http://localhost:10001
  dsmr-docs-nl:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Containerfile
      target: local-dsmrreader-docs-nl
    volumes:
      - .:/usr/src/app
    ports:
      - '10001:10000'

  dsmr-db:
    container_name: dsmr-db
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsmrreader"]
      interval: 10s
      timeout: 5s
      retries: 10
#    # Only use for restoring DB-backups when developing.
#    # E.g. in container: psql -U dsmrreader -f /run/host/Desktop/dsmrreader-postgresql-backup-Tuesday.sql dsmrreader
#    volumes:
#      - ~/Desktop:/run/host/Desktop/
    environment:
      - POSTGRES_DB=dsmrreader
      - POSTGRES_USER=dsmrreader
      - POSTGRES_PASSWORD=postgres-password

  test-db-postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsmrreader"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_DB=test_dsmrreader
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpasswd

  # WARNING: MySQL tests/connections are broken here, but do seem to work well in the CI anyway.
  test-db-mysql:
    image: mysql:8
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
     - MYSQL_DATABASE=test_dsmrreader
     - MYSQL_USER=testuser
     - MYSQL_PASSWORD=testpasswd
     - MYSQL_ROOT_PASSWORD=testpasswd

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    volumes:
      - ./dsmrreader/provisioning/container/mosquitto-dev/:/mosquitto/config/
    ports:
      - '1883:1883'

  influxdb:
    image: influxdb:2.0-alpine
    restart: unless-stopped
    ports:
      - '8086:8086'
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=dsmrreader
      - DOCKER_INFLUXDB_INIT_PASSWORD=dsmrreader
      - DOCKER_INFLUXDB_INIT_ORG=dsmrreader
      - DOCKER_INFLUXDB_INIT_BUCKET=dsmrreader_measurements
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=dsmrreader_influxdb_token
